---
name: Build binary
on:
  push:
    tags:
      - v**

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Copy sdkconfig.release to .defaults
      run: |
        echo "Multicommand stuffs"
        mv sdkconfig.release sdkconfig.defaults
    - name: Query git commit hash
      run: echo "::set-output name=value::$(git rev-parse HEAD)"
      id: get_git_hash
    - name: Get the version
      id: get_version
      run: echo "::set-output name=value::${GITHUB_REF/refs\/tags\//}"
    - name: esp-idf build
      uses: espressif/esp-idf-ci-action@release-v4.4
#      env:
#        SDKCONFIG_DEFAULTS: "sdkconfig.release"
    - name: Write version id (git sha1) to file
      run: echo ${{ steps.get_git_hash.outputs.value }} > versionid.txt
    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.get_version.outputs.value }}
        tag_name: ${{ steps.get_version.outputs.value }}
#        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload binary artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/esp-gh-wf.bin
        asset_name: esp32_firmware_${{ steps.get_version.outputs.value }}.bin
        asset_content_type: application/octet-stream
    - name: Upload version id
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: versionid.txt
        asset_name: versionid.txt
        asset_content_type: text/plain
